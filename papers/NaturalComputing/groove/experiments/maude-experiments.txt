Maude case experiments
======================

# To replicate, use at least GROOVE version 7.4.3 (see https://github.com/nl-utwente-groove/code/releases/)

# The following instructions are for Windows Powershell
# Define a Generator call with
function generator {
  java -Xmx12G -XX:SoftRefLRUPolicyMSPerMB=10 -jar \Path\To\Groove\bin\Generator.jar @args
}
# Define a ModelChecker call with
function modelchecker {
  java -Xmx12G -XX:SoftRefLRUPolicyMSPerMB=10 -cp \Path\To\Groove\bin\Generator.jar nl.utwente.groove.verify.CTLModelChecker @args
}

The model checking experiments
------------------------------
# Scenario 1, context [k,ket]
# LTL: FG(steady -> akt)
generator -P maude.properties -s 'ltl:FG(steady -> present(\"akt\"))' .\rs-explore.gps\ maude.BT474-1-ket
# LTL: G(erbb2 -> X(erbb2))
generator -P maude.properties -s 'ltl:G(present(\"erbb2\") -> X present(\"erbb2\"))' .\rs-explore.gps\ maude.BT474-1-ket

# Scenario 2, context [{e,egf,hrg}.korep]
# CTL: EF (steady & !akt)
# CTL: AF (steady & !akt)
modelchecker `
  -ctl "EF (steady & !akt)" `
  -ctl "AF (steady & !akt)" `
  -g -P maude.properties .\rs-explore.gps\ maude.BT474-2-korep

# Scenario 3, context [k,korept]
# LTL: G(pdk1 -> FG(steady -> akt))
generator -P maude.properties -s 'ltl:G(present(\"pdk1\") -> FG(steady -> present(\"akt\")))' .\rs-explore.gps\ maude.BT474-3-korept
# LTL: erbb1 R !pdk1
generator -P maude.properties -s 'ltl:present(\"erbb1\") R !present(\"pdk1\")' .\rs-explore.gps\ maude.BT474-3-korept

# Scenario 4, context [k,kge]
# CTL: EG EF (steady -> !akt)
modelchecker `
  -ctl "EG EF (steady -> !akt)" `
  -g -P maude.properties .\rs-explore.gps\ maude.BT474-4-kge
